{"version":3,"file":"connect.js","sourceRoot":"","sources":["../src/components/connect.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,0CAAqC;AACrC,sDAAiD;AAEjD,iBAAgC,UAAU;IACxC,EAAE,CAAC,CAAC,OAAO,UAAU,KAAK,UAAU,CAAC;QAAC,UAAU,GAAG,gBAAM,CAAC,UAAU,CAAC,CAAC;IACtE,MAAM,CAAC,UAAA,KAAK,IAAI;QAAsB,2BAAe;QAArC;YAAA,qEAqBf;YApBC,WAAK,GAAG,KAAI,CAAC,QAAQ,EAAE,CAAC;YACxB,YAAM,GAAG;gBACP,IAAI,MAAM,GAAG,KAAI,CAAC,QAAQ,EAAE,CAAC;gBAC7B,EAAE,CAAC,CAAC,CAAC,sBAAY,CAAC,MAAM,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACtC,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxB,CAAC;YACH,CAAC,CAAA;;QAcH,CAAC;QAbC,0BAAQ,GAAR;YACE,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC;YACxE,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC;QACD,oCAAkB,GAAlB;YACE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5C,CAAC;QACD,sCAAoB,GAApB;YACE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9C,CAAC;QACD,wBAAM,GAAN,UAAO,KAAK,EAAE,KAAK,EAAE,OAAO;YAC1B,MAAM,CAAC,oBAAC,KAAK,aAAC,KAAK,EAAE,OAAO,CAAC,KAAK,IAAM,KAAK,EAAM,KAAK,EAAI,CAAC;QAC/D,CAAC;QACH,cAAC;IAAD,CAAC,AArBe,CAAsB,KAAK,CAAC,SAAS,IAArC,CAqBf,CAAC;AACJ,CAAC;AAxBD,0BAwBC","sourcesContent":["import * as React from \"react\";\nimport select from \"../utils/select\";\nimport shallowEqual from \"../utils/shallowEqual\";\n\nexport default function connect(mapToProps) {\n  if (typeof mapToProps !== \"function\") mapToProps = select(mapToProps);\n  return Child => class Wrapper extends React.Component {\n    state = this.getProps();\n    update = () => {\n      let mapped = this.getProps();\n      if (!shallowEqual(mapped, this.state)) {\n        this.setState(mapped);\n      }\n    }\n    getProps() {\n      const state = this.context.store && this.context.store.getState() || {};\n      return mapToProps(state);\n    }\n    componentWillMount() {\n      this.context.store.subscribe(this.update);\n    }\n    componentWillUnmount() {\n      this.context.store.unsubscribe(this.update);\n    }\n    render(props, state, context) {\n      return <Child store={context.store} {...props} {...state} />;\n    }\n  };\n}\n"]}